import Header from "@/components/Header";
import Head from "next/head";
import Link from "next/link";
import { useContractRead } from 'wagmi'
import { writeContract } from '@wagmi/core'
import mainPagesStyles from "@/styles/Nft.module.css";
import ContractABI from "@/components/ContractABI";
import { useState } from "react";

const CONTRACT_ADDRESS = '0x42142d58a5a4d7fAc22Fd2D3b5DBf46B04D5d16e';
const getExplorerLink = () => `https://bscscan.com/token/${CONTRACT_ADDRESS}`;
const getOpenSeaURL = () => `https://opensea.io/assets/bsc/${CONTRACT_ADDRESS}`;
const getTofuNFTURL = () => `https://opensea.io/assets/bsc/${CONTRACT_ADDRESS}`;

export default function Home() {
  const { data: contractData, isError, isLoading } = useContractRead({
    address: CONTRACT_ADDRESS,
    abi: ContractABI,
    functionName: 'name',
  });

  const { data: symbol, isError: symbolError, isLoading: symbolLoading } = useContractRead({
    address: CONTRACT_ADDRESS,
    abi: ContractABI,
    functionName: 'symbol',
  });

  const { data: cost, isError: costError, isLoading: costLoading } = useContractRead({
    address: CONTRACT_ADDRESS,
    abi: ContractABI,
    functionName: 'cost',
  });

  const { data: totalSupply, isError: totalSupplyError, isLoading: totalSupplyLoading } = useContractRead({
    address: CONTRACT_ADDRESS,
    abi: ContractABI,
    functionName: 'totalSupply',
  });

  // Assuming Wagmi provides a function to convert from wei to ether, adjust this accordingly
  const convertWeiToEther = (wei) => {
    // Implementation depends on the Wagmi library, replace this with the actual conversion function
    // Example: return wagmiConvertFunction(wei);
    return wei;
  };

  // Convert cost from wei to ether
  const costInEther = cost ? convertWeiToEther(cost) : null;

  return (
    <>
      <Head>
        <title>Fox's Friends | Next Wagmi Ethers Web3 an more</title>
        <meta name="description" content="Generated by create-wc-dapp" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <Header />

      <main className={`${mainPagesStyles.mainPages}`}>
        <div className={`${mainPagesStyles.wrapper}`}>
          {/* Display the contract name */}
          <h1>Contract Name: {contractData?.toString() || 'N/A'}</h1>
          <p>Symbol: {symbolLoading ? 'Loading...' : symbolError ? 'Error' : symbol || 'N/A'}</p>

          {/* Display contract properties */}
          <div>
            <p>Cost: {costLoading ? 'Loading...' : costError ? 'Error' : costInEther || 'N/A'} BNB </p>
            <p>Total Supply: {totalSupplyLoading ? 'Loading...' : totalSupplyError ? 'Error' : totalSupply || 'N/A'}</p>
          </div>
        </div>

      </main>
    </>
  );
}
